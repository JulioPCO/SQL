--1) Crie no SqliteStudio um banco de dados chamado lista3.sqlite e execute os comandos abaixo.

--2) Crie uma tabela com o nome de livros contendo os campos codigo, titulo, codigo do autor, código da
--editora, código do estilo, sinopse e isbn. Sugestão de nome de campo: autor_codigo, editora_codigo

create table livro(id int, titulo text, autor_id  int, editora_id int, estilo_id,sinopse text
,isbn text);

--3) Crie uma tabela com o nome de editoras contendo o codigo, nome, cidade, estado, telefone e e-mail.

create table editora(id int, nome text, cidade text, estado text, telefone text, email text);

--4) Crie uma tabela com o nome de estilos contendo o código e o nome do estilo.

create table estilo(id int, nome text);

--5) Crie uma tabela com o nome de autores contendo o codigo, nome, cidade, estado, telefone do autor.

create table autor(id int, nome text, cidade text, estado text, telefone text);

--6) Insira um registro na tabela livros (todos os campos)

insert into livro(id,titulo,autor_id,estilo_id,editora_id,sinopse,isbn)
values (1,"Código da Vinci",1,1,1,"Dramático","ar");

--7) Insira um registro na tabela editoras (todos os campos).

insert into editora(id,nome,cidade,estado,telefone,email)
values (1,"Leia", "Rio de Janeiro","RJ","97432-9932","leia@gmail.com");

--8) Insira um registro na tabela estilos (todos os campos).

insert into estilo(id,nome) values (1,"Suspense");

--9) Insira um registro na tabela autores (todos os campos).

insert into autor(id,nome,cidade,estado,telefone)
values (1,"Dan Brown", "Washington", "WDC", "98493-9943"); 

--10) Altere o nome da tabela autores para autor.
--11) Insira na tabela livros um novo registro adicionando somente os campos codigo e nome

insert into livro(id,titulo) values(2,"Anjos e Demonios");

--12) Insira 5 estilos de livros (comédia, drama, ficção, suspense, romance).

insert into estilo(id,nome) values (2,"Comédia");
insert into estilo(id,nome) values (3,"Drama");
insert into estilo(id,nome) values (4,"Ficção");
insert into estilo(id,nome) values (5,"Romance");

--13) Selecionar todos os livros do banco de dados.

select * from livro;

--14) Insira 2 novos livros.

insert into livro(id,titulo,autor_id,estilo_id,editora_id,sinopse,isbn)
values (3,"Inferno",1,1,1,"Dramático","ar2");

insert into livro(id,titulo,autor_id,estilo_id,editora_id,sinopse,isbn)
values (4,"As meninas",2,3,2,"Dramático","ar32");


--15) Altere o nome da tabela livros autores para livro.
--16) DESAFIO: Selecione o nome de todos os estilos em ordem alfabética

select * from estilo order by nome;

--17) DESAFIO: Selecione o nome de todos os autores em ordem alfabética inversa

select * from estilo order by nome desc;

--18) Selecione o nome e o telefone de todas as editoras.

select nome,telefone from editora;

--19) Selecione o nome de todas as editoras

select nome from editora;


--20) Selecione o nome de todas as editoras de MG

select nome from editora where estado="RJ";

--21) Selecione os estilos de livros em ordem alfabética.

select estilo_id from livro order by titulo;

--22) Selecione agora em ordem alfabética inversa.

select estilo_id from livro order by titulo desc;

--23) Selecione o nome de todos os autores de SP.

select nome from autor where estado = "SP";

--24) Selecione o estilo de código 13
--25) Selecione o autor de código 8
--26) Selecione a editora de código 10
--27) Selecione o nome, a cidade e o estado de todas as editoras.
--28) Adicione 3 editoras.

insert into editora(id, nome) values(2,"Maua");

--29) Selecione o nome de todas as editoras
--30) Exclua a editora de código 1

delete from editora where id =2;


select* from autor;


--update
update autor set telefone = "99993-9093" where id=1;

update editora set cidade="Laguinhos" where id=1;


--join

select l.titulo,a.nome
from livro l ,autor a 
where a.id = l.autor_id;

select l.titulo,e.nome
from livro l, editora e
where e.id = l.editora_id;

select l.titulo,e.nome,a.nome
from livro l, autor a, editora e
where a.id = l.autor_id and e.id =l.editora_id;

select l.titulo,e.nome,a.nome
from livro l, autor a, editora e
where a.id = l.autor_id and e.id =l.editora_id and e.estado="PR";


--1) Abra no SQLite Studio o banco de dados com o controle de livros que desenvolvemos.
--2) Selecione o nome e o estilo de todos os livros

select titulo,estilo_id from livro;

--3) Selecione o nome e a editora de todos os livros

select titulo, editora_id from livro;
--4) Selecione o nome e o autor de todos os livros

select titulo,autor_id from livro;

--5) Selecione o nome e o estilo de todos os livros que começam por “A”

select titulo,estilo_id 
from livro
where titulo like "A%";

--6) Selecione o nome e o estilo de todos os livros que cujo estilo comece por “R”

select titulo,estilo_id 
from livro
where titulo like "R%";

--7) Selecione o nome do autor, da editora, do estilo e do livro de todos os livros de autores cujo nome
--comece por D.

select a.nome, e.nome, es.nome, l.titulo
from livro l, autor a, editora e, estilo es
where a.nome like "D%" and a.id = l.autor_id and e.id = l.editora_id and es.id = l.estilo_id;

--8) Selecione o nome do autor, da editora, do estilo e do livro de todos os livros de editoras paulistas.

select a.nome, e.nome, es.nome, l.titulo
from livro l, autor a, editora e, estilo es
where e.estado = "RJ" and a.id = l.autor_id and e.id = l.editora_id and es.id = l.estilo_id;

--9) Atualize o autor do livro de id 1 para autor_id 2.

update autor
set id=2
where id=1;

--10) Atualize o telefone da editora de id 3 para 44 6666-6666

update editora
set telefone = "90392-9304"
where id=1;

--11) Atualize o nome do autor 8 para “Graciliano Ramos”
--12) Atualize o estilo 5 para Fantasia.

update estilo
set nome="Fantasia"
where id=5;

--13) Selecione o nome do livro e do estilo de todas as editoras de SP.

select l.titulo,es.nome
from livro l, estilo es, editora e
where e.estado = "RJ" AND e.id=l.editora_id and es.id=l.estilo_id;
--14) Selecione o nome do livro e da Editora de todas as editoras de SP.

select l.titulo,e.nome
from livro l, editora e
where e.estado = "RJ" AND e.id=l.editora_id;
--15) Selecione o nome do livro e do autor de em ordem alfabética por autor.

select l.titulo,a.nome
from livro l, autor a
where a.id=l.autor_id
order by a.nome;

--Count

select count(*) 
from autor;


select count(*) 
from editora
where estado="RJ";

--mean avg

select avg(id) "Media"
from livro;

--min max

select max(autor_id)
from livro;

select min(autor_id)
from livro;

---group by and having

select estado,count(*) 
from editora
GROUP BY estado
having count(*)<30;

create view count_estado_30  as
select estado,count(*) 
from editora
GROUP BY estado
having count(*)<30;

--view

--criar uma view

create view Rio as
select a.nome, e.nome, es.nome, l.titulo
from livro l, autor a, editora e, estilo es
where e.estado = "RJ" and a.id = l.autor_id and e.id = l.editora_id and es.id = l.estilo_id;

select* from Rio
where "nome:1" like "L%";

-- deletar view

drop view Rio;

--index

select count(*) from dados_fake
where estado ="MG";


create index idx_editora on editora (
estado
);

create index indice2 on editora(cidade);
-----------------------------
--Resultado sem índice--
----------------------------
-- busca 0.020s

-----------------------------
--Resultado com índice--
----------------------------
-- busca 0.015

--deletando index

drop index indice2;

--Distinct - não repetir dadors

select distinct estado from editora;

select distinct cidade from editora;

--limit - limitar dados

select * from editora
order by nome
 limit 10;
 
--subselect

select * from livro;
select * from autor;

select titulo from livro where autor_id = (
    select id 
    from autor
    where nome="Dan Brown"
);

--Exclusão

delete from livro where autor_id= (
    select id
    from autor
    where nome ="Sun Tzu"
);


--1) Faça um select somente de 10 editoras de GO

select * 
from editora
where estado = "GO"
limit 10;

--2) Exiba o nome das editoras em ordem inversa e retorne as 3 primeiras

select nome 
from editora
order by nome desc
limit 3;

--3) Exiba todos os estados que temos editoras cadastradas

select distinct estado
from editora;

--4) Crie uma view para o select que você fez no exercício 1 com o nome de GOIAS.

create view goias as
select * 
from editora
where estado = "GO"
limit 10;

--5) Crie uma view para o select que você fez no exercício 3 com o nome de ESTADOS.

create view ESTADOS as
select distinct estado
from editora;

--6) Crie um índice para o estado na tabela Editora

create index idx_edestaados on editora(estado);

--7) Crie um índice para o nome do autor.

create index idx_aautor on autor(nome);

--8) Utilize subselect e exclua todos os livros da editora XPTO

delete from livro
where editora_id = (
    select id
    from editora
    where nome="XPTO"
    );

--9) Utilize subselect e exclua todos os livros do autor José Buscapé

delete from livro 
where autor_id = (
    select id
    from autor
    where nome = "José Buscapé"
    );

--10) Exclua a view GOIAS

drop view goias;

--11) Exclua o índice da tabela Editora

drop index idx_edestaados;

--12) Exclua a view Estados

drop view ESTADOS;

--13) Exiba em ordem alfabética as editoras e mostre as 7 primeiras (somente o nome).

select nome from editora 
order by nome
limit 7;

--14) Exclua o índice da tabela autor

drop index idx_aautor;

--15) Crie um índice para o nome do livro

create index idx_nomelivro on livro(titulo);


--funções adicionais

--ifnull\decode
select titulo, ifnull(estilo_id,"Falta Código do Estilo")
from livro;

--length
select titulo,length(titulo) from livro where id=1;

--lower case
select lower(titulo) from livro where id=1;

--upper case
select upper(titulo) from livro where id=1;

--substr(x,y,z)
select substr("Curso de SQL",8,4);

--random()
select titulo, substr(random(),3,3) as codigo_inventado
from livro;

--the replace

select replace("Curso de SQL"," ","---");

--round

select titulo, round(precovenda,1) from livro;

--trim 
select trim("      Curso    _   de    _   S Q L    ");

--Rtrim 
select rtrim("      Curso    _   de    _   S Q L    ");

--Ltrim 
select ltrim("      Curso    _   de    _   S Q L    ");

--typeof()

select typeof(1);
select typeof(" ");

--date('now')
select date ('now');

--sqlite version
select sqlite_version();

-- transações

begin transaction;
insert into autor(id,nome) values (7,"Tiago");
rollback;

begin transaction;
insert into autor(id,nome) values (8,"Tiago");
commit;

begin transaction;
delete from autor where id=1;
rollback;

-- inner join ou join normal, outer join ou left outer join
--join normal
select l.titulo,e.nome
from livro l, estilo e
where e.id=l.estilo_id;

--Inner join
select titulo, nome
from estilo inner join livro
on estilo.id = livro.estilo_id;
-- se ambas condições são iguais (null nao aparece)

--Outer join
select titulo, nome
from estilo left outer join livro
on estilo.id = livro.estilo_id; 
--o da esqueda do from (left) mostra todos os campos


select titulo, nome
from livro left outer join estilo
on estilo.id = livro.estilo_id;
-- null aparece